openapi: 3.0.0
info:
  title: Exam Attempts API
  description: API para manejar intentos de examen con calificación por AI
  version: 1.0.0

paths:
  /api/exam-attempts/start:
    post:
      tags:
        - Exam Attempts
      summary: Iniciar un intento de examen
      description: Crea un nuevo intento de examen para un usuario
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - examId
              properties:
                examId:
                  type: string
                  description: ID del examen a iniciar
                  example: "507f1f77bcf86cd799439011"
      responses:
        '201':
          description: Intento iniciado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ExamAttempt'
        '400':
          description: Error en la solicitud
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Límite de intentos alcanzado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/exam-attempts/in-progress/{examId}:
    get:
      tags:
        - Exam Attempts
      summary: Obtener intento en progreso
      description: Obtiene el intento en progreso para un examen específico
      security:
        - bearerAuth: []
      parameters:
        - name: examId
          in: path
          required: true
          schema:
            type: string
          description: ID del examen
          example: "507f1f77bcf86cd799439011"
      responses:
        '200':
          description: Intento en progreso encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ExamAttempt'
        '404':
          description: No se encontró intento en progreso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/exam-attempts/{id}/submit:
    post:
      tags:
        - Exam Attempts
      summary: Enviar respuestas del examen
      description: Envía las respuestas completas del usuario para calificación
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del intento
          example: "507f1f77bcf86cd799439012"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - answers
              properties:
                answers:
                  type: array
                  items:
                    $ref: '#/components/schemas/ExamAnswer'
                  description: Array de respuestas del usuario
      responses:
        '200':
          description: Respuestas enviadas exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ExamAttempt'
        '400':
          description: Error en la validación de respuestas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/exam-attempts/{id}/grade:
    post:
      tags:
        - Exam Attempts
      summary: Calificar intento con AI
      description: Califica el intento usando inteligencia artificial
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del intento
          example: "507f1f77bcf86cd799439012"
      responses:
        '200':
          description: Intento calificado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ExamAttempt'
        '503':
          description: Servicio de AI no disponible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/exam-attempts/user/{userId}:
    get:
      tags:
        - Exam Attempts
      summary: Obtener intentos de un usuario
      description: Obtiene todos los intentos de examen de un usuario específico
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario
          example: "507f1f77bcf86cd799439013"
      responses:
        '200':
          description: Intentos obtenidos exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExamAttempt'

  /api/exam-attempts/{id}:
    get:
      tags:
        - Exam Attempts
      summary: Obtener detalles de un intento
      description: Obtiene los detalles completos de un intento específico
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del intento
          example: "507f1f77bcf86cd799439012"
      responses:
        '200':
          description: Detalles del intento obtenidos exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ExamAttempt'
        '404':
          description: Intento no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/exam-attempts/{id}/abandon:
    post:
      tags:
        - Exam Attempts
      summary: Abandonar intento
      description: Abandona un intento en progreso
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del intento
          example: "507f1f77bcf86cd799439012"
      responses:
        '200':
          description: Intento abandonado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ExamAttempt'

  /api/exam-attempts/stats/{userId}:
    get:
      tags:
        - Exam Attempts
      summary: Obtener estadísticas de intentos
      description: Obtiene estadísticas de intentos de un usuario
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario
          example: "507f1f77bcf86cd799439013"
        - name: examId
          in: query
          required: false
          schema:
            type: string
          description: ID del examen (opcional, para filtrar por examen)
          example: "507f1f77bcf86cd799439011"
      responses:
        '200':
          description: Estadísticas obtenidas exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/AttemptStats'

components:
  schemas:
    ExamAttempt:
      type: object
      properties:
        _id:
          type: string
          example: "507f1f77bcf86cd799439012"
        exam:
          type: string
          example: "507f1f77bcf86cd799439011"
        user:
          type: string
          example: "507f1f77bcf86cd799439013"
        status:
          type: string
          enum: [in_progress, submitted, graded, abandoned]
          example: "graded"
        startTime:
          type: string
          format: date-time
          example: "2024-01-15T10:00:00Z"
        submittedAt:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        gradedAt:
          type: string
          format: date-time
          example: "2024-01-15T10:31:00Z"
        score:
          type: number
          example: 85
        maxScore:
          type: number
          example: 100
        aiFeedback:
          type: string
          example: "Excelente trabajo en gramática básica, pero necesitas mejorar en vocabulario avanzado."
        answers:
          type: array
          items:
            $ref: '#/components/schemas/ExamAnswer'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ExamAnswer:
      type: object
      properties:
        questionId:
          type: string
          example: "507f1f77bcf86cd799439014"
        questionText:
          type: string
          example: "¿Cuál es la forma correcta del verbo 'to be' en presente simple para 'he'?"
        options:
          type: array
          items:
            $ref: '#/components/schemas/QuestionOption'
        userAnswer:
          type: array
          items:
            type: string
          example: ["is"]
        aiComment:
          type: string
          example: "¡Perfecto! Has identificado correctamente que 'is' es la forma correcta para 'he'."
        isCorrect:
          type: boolean
          example: true
        points:
          type: number
          example: 2

    QuestionOption:
      type: object
      properties:
        value:
          type: string
          example: "is"
        label:
          type: string
          example: "is"
        isCorrect:
          type: boolean
          example: true

    AttemptStats:
      type: object
      properties:
        totalAttempts:
          type: number
          example: 5
        completedAttempts:
          type: number
          example: 3
        inProgressAttempts:
          type: number
          example: 1
        averageScore:
          type: number
          example: 82.5
        bestScore:
          type: number
          example: 95
        lastAttempt:
          $ref: '#/components/schemas/ExamAttempt'

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          example: "Error message"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 