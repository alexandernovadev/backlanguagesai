openapi: 3.0.0
info:
  title: AI Generation API
  description: Endpoints for AI-generated content
  version: 1.0.0
paths:
  /api/ai/generate-audio-from-text:
    post:
      summary: Generate audio and subtitles from a given text using AI
      tags:
        - AI Generation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                  example: "Learning a new language can be fun and rewarding."
                voice:
                  type: string
                  enum: [nova, alloy, echo, fable, onyx, shimmer]
                  default: "nova"
                  example: "fable"
              required:
                - prompt
      responses:
        '201':
          description: Returns the generated audio and subtitles paths
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Audio and subtitles generated successfully"
                  data:
                    type: object
                    properties:
                      audioPath:
                        type: string
                        example: "/absolute/path/to/public/audios/1713469637492.wav"
                      subtitlesPath:
                        type: string
                        example: "/absolute/path/to/public/audios/1713469637492.srt"
        '400':
          description: Bad request, missing prompt
        '500':
          description: Internal server error while generating audio or subtitles

  /api/ai/generate-text:
    post:
      summary: Generate a text stream based on a given prompt
      tags:
        - AI Generation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                  example: "The importance of renewable energy"
                level:
                  type: string
                  enum: [A1, A2, B1, B2, C1, C2]
                  example: "B2"
                typeWrite:
                  type: string
                  example: "Academic Article"
                addEasyWords:
                  type: boolean
                  example: true
              required:
                - prompt
      responses:
        '200':
          description: Returns a streamed Markdown-formatted text response
          content:
            text/markdown:
              schema:
                type: string
                example: "# Renewable Energy\n## Importance\nRenewable energy sources..."
        '400':
          description: Bad request, missing required fields
        '500':
          description: Internal server error

  /api/ai/generate-wordJson:
    post:
      summary: Generate a JSON object for a word with definitions, examples, and translations
      tags:
        - AI Generation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                  example: "challenge"
                language:
                  type: string
                  enum: [en, es, pt]
                  default: "en"
                  example: "en"
              required:
                - prompt
      responses:
        '201':
          description: Returns a structured JSON with word details
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Word created successfully"
                  data:
                    type: object
                    properties:
                      word:
                        type: string
                        example: "challenge"
                      language:
                        type: string
                        example: "en"
                      definition:
                        type: string
                        example: "A difficult task or situation that requires effort to overcome."
                      examples:
                        type: array
                        items:
                          type: string
                        example:
                          - "Starting a new job comes with its own set of challenges."
                          - "The project presented several challenges."
                      type:
                        type: array
                        items:
                          type: string
                        example: ["noun", "verb"]
                      IPA:
                        type: string
                        example: "/ˈtʃæl.ɪn.dʒ/"
                      synonyms:
                        type: array
                        items:
                          type: string
                        example: ["difficulty", "obstacle", "hurdle"]
                      codeSwitching:
                        type: array
                        items:
                          type: string
                        example:
                          - "Enfrentamos varios challenges al implementar el proyecto."
                          - "La vida está llena de challenges que nos ayudan a crecer."
                      spanish:
                        type: object
                        properties:
                          definition:
                            type: string
                            example: "Situaciones o tareas difíciles que requieren esfuerzo y determinación para superarse."
                          word:
                            type: string
                            example: "desafío"
        '400':
          description: Bad request, missing required fields
        '500':
          description: Internal server error

  /api/ai/generate-word-examples/{idword}:
    put:
      summary: Generate and update word examples using AI
      tags:
        - AI Generation
      parameters:
        - in: path
          name: idword
          required: true
          schema:
            type: string
          description: The ID of the word to update with AI-generated examples
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                word:
                  type: string
                  example: "challenge"
                language:
                  type: string
                  enum: [en, es, pt]
                  default: "en"
                  example: "en"
                oldExamples:
                  type: array
                  items:
                    type: string
                  example:
                    - "This is an old example sentence."
                    - "Another previous example of usage."
              required:
                - word
                - language
                - oldExamples
      responses:
        '201':
          description: Returns the updated word examples
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Word examples generated successfully"
                  data:
                    type: object
                    properties:
                      word:
                        type: string
                        example: "challenge"
                      examples:
                        type: array
                        items:
                          type: string
                        example:
                          - "Overcoming obstacles is always a challenge."
                          - "She accepted the challenge to improve her skills."
                          - "Life is full of unexpected challenges."
        '400':
          description: Bad request, missing required fields (word)
        '500':
          description: Internal server error

  /api/ai/generate-code-switching/{idword}:
    put:
      summary: Generate and update word Code-Switching examples using AI
      tags:
        - AI Generation
      parameters:
        - in: path
          name: idword
          required: true
          schema:
            type: string
          description: The ID of the word to update with AI-generated code-switching examples
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                word:
                  type: string
                  example: "challenge"
                language:
                  type: string
                  enum: [en, es, pt]
                  default: "en"
                  example: "en"
                oldExamples:
                  type: array
                  items:
                    type: string
                  example:
                    - "El globo bursts y todos se asustan"
                    - "Ella bursts en lágrimas al escuchar la noticia."
              required:
                - word
                - language
                - oldExamples
      responses:
        '201':
          description: Returns the updated word Code-Switching examples
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Word Code-Switching examples generated successfully"
                  data:
                    type: object
                    properties:
                      word:
                        type: string
                        example: "bursts"
                      examples:
                        type: array
                        items:
                          type: string
                        example:
                          - "El globo bursts y todos se asustan."
                          - "Ella bursts en lágrimas al escuchar la noticia."
                          - "El río bursts sus orillas después de la tormenta."
        '400':
          description: Bad request, missing required fields (word, language, or oldExamples)
        '500':
          description: Internal server error

  /api/ai/generate-word-wordtypes/{idword}:
    put:
      summary: Generate and update word types using AI
      tags:
        - AI Generation
      parameters:
        - in: path
          name: idword
          required: true
          schema:
            type: string
          description: The ID of the word to update with AI-generated types
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                word:
                  type: string
                  example: "run"
                language:
                  type: string
                  enum: [en, es, pt]
                  default: "en"
                  example: "en"
                oldExamples:
                  type: array
                  items:
                    type: string
                  example:
                    - "I love to run in the morning."
                    - "He scored a home run in the final inning."
              required:
                - word
                - language
      responses:
        '201':
          description: Returns the updated word types
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Word Types generated successfully"
                  data:
                    type: object
                    properties:
                      word:
                        type: string
                        example: "run"
                      type:
                        type: array
                        items:
                          type: string
                        example:
                          - "noun"
                          - "verb"
        '400':
          description: Bad request, missing required fields (word, language)
        '500':
          description: Internal server error

  /api/ai/generate-code-synonyms/{idword}:
    put:
      summary: Generate and update word synonyms using AI
      tags:
        - AI Generation
      parameters:
        - in: path
          name: idword
          required: true
          schema:
            type: string
          description: The ID of the word to update with AI-generated synonyms
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                word:
                  type: string
                  example: "happy"
                language:
                  type: string
                  enum: [en, es, pt]
                  default: "en"
                  example: "en"
                oldExamples:
                  type: array
                  items:
                    type: string
                  example:
                    - "She felt very happy after receiving the good news."
                    - "It was a happy moment for everyone."
              required:
                - word
                - language
      responses:
        '201':
          description: Returns the updated word synonyms
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Word Synonyms generated successfully"
                  data:
                    type: object
                    properties:
                      word:
                        type: string
                        example: "happy"
                      synonyms:
                        type: array
                        items:
                          type: string
                        example:
                          - "joyful"
                          - "content"
                          - "pleased"
        '400':
          description: Bad request, missing required fields (word, language)
        '500':
          description: Internal server error

  /api/ai/generate-image/{idword}:
    post:
      summary: Generate an AI image and update the word entry
      tags:
        - AI Generation
      parameters:
        - in: path
          name: idword
          required: true
          schema:
            type: string
          description: The ID of the word to update with the AI-generated image
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                word:
                  type: string
                  example: "challenge"
                imgOld:
                  type: string
                  example: "https://res.cloudinary.com/example/image/upload/v1234567890/oldimage.png"
              required:
                - word
      responses:
        '201':
          description: Returns the updated word with the generated image
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Image generated and updated successfully"
                  data:
                    type: object
                    properties:
                      word:
                        type: string
                        example: "challenge"
                      imageUrl:
                        type: string
                        example: "https://cloudinary.com/image123.jpg"
        '400':
          description: Bad request, missing required fields (word)
        '500':
          description: Internal server error

  /api/ai/generate-exam:
    post:
      summary: Generate an exam with questions using AI
      description: |
        Generates a complete exam with questions based on specified parameters.
        Returns a streamed JSON response with the generated questions.
        
        The AI will create questions appropriate for the specified CEFR level,
        covering the given topic with the requested question types and difficulty.
      tags:
        - AI Generation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                level:
                  type: string
                  enum: [A1, A2, B1, B2, C1, C2]
                  default: "B1"
                  description: CEFR level for the exam questions
                  example: "B1"
                topic:
                  type: string
                  description: Main topic or subject for the exam
                  example: "daily life"
                  minLength: 1
                  maxLength: 200
                numberOfQuestions:
                  type: integer
                  minimum: 1
                  maximum: 50
                  default: 10
                  description: Number of questions to generate
                  example: 10
                types:
                  type: array
                  items:
                    type: string
                    enum: [multiple_choice, fill_blank, true_false, translate, writing]
                  default: ["multiple_choice", "fill_blank", "true_false"]
                  description: Types of questions to include in the exam
                  example: ["multiple_choice", "fill_blank", "true_false"]
                difficulty:
                  type: integer
                  minimum: 1
                  maximum: 5
                  default: 3
                  description: Difficulty level from 1 (easy) to 5 (hard)
                  example: 3
                userLang:
                  type: string
                  default: "es"
                  description: Language for explanations (ISO 639-1 code)
                  example: "es"
              required:
                - topic
      responses:
        '200':
          description: |
            Returns a streamed JSON response with generated questions.
            The response is a JSON object with a questions array.
          content:
            application/json:
              schema:
                type: object
                properties:
                  questions:
                    type: array
                    items:
                      type: object
                      properties:
                        text:
                          type: string
                          description: The question text
                          example: "What is the capital of France?"
                        type:
                          type: string
                          enum: [multiple_choice, fill_blank, true_false, translate, writing]
                          description: Type of question
                          example: "multiple_choice"
                        isSingleAnswer:
                          type: boolean
                          description: Whether the question has only one correct answer
                          example: true
                        options:
                          type: array
                          description: Available options for multiple choice questions
                          items:
                            type: object
                            properties:
                              value:
                                type: string
                                description: Option identifier (A, B, C, etc.)
                                example: "A"
                              label:
                                type: string
                                description: Option text
                                example: "London"
                              isCorrect:
                                type: boolean
                                description: Whether this option is correct
                                example: false
                          example:
                            - value: "A"
                              label: "London"
                              isCorrect: false
                            - value: "B"
                              label: "Paris"
                              isCorrect: true
                            - value: "C"
                              label: "Berlin"
                              isCorrect: false
                        correctAnswers:
                          type: array
                          items:
                            type: string
                          description: Array of correct answer values
                          example: ["B"]
                        explanation:
                          type: string
                          description: Explanation of the correct answer in user's language with colorful HTML formatting and emojis (dark theme compatible)
                          example: "🔴 <span style='color: #ff6b6b; font-weight: bold;'>AI</span> es singular, por lo tanto, usamos 🟦 <span style='color: #74b9ff; border: 1px solid #74b9ff; padding: 2px 4px; border-radius: 3px;'>has</span> 🟢 <span style='color: #00b894; text-decoration: underline;'>(no have)</span>"
                        tags:
                          type: array
                          items:
                            type: string
                          description: Tags for categorizing the question
                          example: ["grammar", "verb tenses"]
                example:
                  questions:
                    - text: "Choose the correct verb form: AI ___ changed the way we work."
                      type: "multiple_choice"
                      isSingleAnswer: true
                      options:
                        - value: "A"
                          label: "have"
                          isCorrect: false
                        - value: "B"
                          label: "has"
                          isCorrect: true
                        - value: "C"
                          label: "is"
                          isCorrect: false
                      correctAnswers: ["B"]
                      explanation: "🔴 <span style='color: #ff6b6b; font-weight: bold;'>AI</span> es singular, por lo tanto, usamos 🟦 <span style='color: #74b9ff; border: 1px solid #74b9ff; padding: 2px 4px; border-radius: 3px;'>has</span> 🟢 <span style='color: #00b894; text-decoration: underline;'>(no have)</span>"
                      tags: ["grammar", "verb tenses"]
        '400':
          description: Bad request - missing required fields or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Topic is required."
        '500':
          description: Internal server error during exam generation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Failed to generate exam stream"

components:
  schemas: {}

tags:
  - name: AI Generation
    description: Endpoints for AI-generated content
